@model greenswamp.Areas.Blog.ViewModels.ProfileViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.User.DisplayName's Profile - Greenswamp</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        swamp: {
                            50: '#f0fdf4',
                            100: '#dcfce7',
                            200: '#bbf7d0',
                            300: '#86efac',
                            400: '#4ade80',
                            500: '#22c55e',
                            600: '#16a34a',
                            700: '#15803d',
                            800: '#166534',
                            900: '#14532d',
                        }
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-swamp-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-0 lg:divide-x sm:divide-y lg:h-[calc(100vh-4rem)]">
            <!-- Left Sidebar -->
            <div class="lg:col-span-1 bg-white">
                <!-- User Card -->
                <div class="p-6 pb-0">
                    <div class="flex space-x-3">
                        <img src="@Model.User.AvatarUrl" alt="User" class="w-16 h-16 rounded-full">
                        <div class="flex-1">
                            <div class="flex items-center justify-between">
                                <div class="space-y-1">
                                    <div class="flex items-center space-x-2">
                                        <h4 class="font-semibold text-swamp-900">@Model.User.DisplayName</h4>
                                        <!-- Dropdown Container -->
                                        <div class="relative">
                                            <button id="settingsButton" class="text-swamp-700 hover:text-swamp-700 transition-colors" aria-label="Profile settings" aria-haspopup="true">
                                                <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor" stroke="none" stroke-linecap="round" stroke-linejoin="round">
                                                    <g id="SVGRepo_iconCarrier">
                                                        <circle cx="18" cy="12" r="1.5" transform="rotate(90 18 12)"></circle>
                                                        <circle cx="12" cy="12" r="1.5" transform="rotate(90 12 12)"></circle>
                                                        <circle cx="6" cy="12" r="1.5" transform="rotate(90 6 12)"></circle>
                                                    </g>
                                                </svg>
                                            </button>
                                            <div id="settingsDropdown" class="absolute hidden right-0 mt-2 w-48 bg-white rounded-lg shadow-xl border border-swamp-100 z-50">
                                                <div class="py-1">
                                                    <button class="w-full px-4 py-2 text-sm text-swamp-700 hover:bg-swamp-50 flex items-center space-x-2">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                                                        </svg>
                                                        <span>Settings</span>
                                                    </button>
                                                    <button class="w-full px-4 py-2 text-sm text-swamp-700 hover:bg-swamp-50 flex items-center space-x-2">
                                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"/>
                                                        </svg>
                                                        <span>Sign Out</span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <a href="@Url.Action("Index", "Profile", new { username = Model.User.Username })" class="text-sm text-swamp-500 hover:text-swamp-700">@@@Model.User.Username</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Links -->
                <div class="p-6 space-y-4">
                    <button class="flex items-center bg-swamp-500 text-white space-x-2 p-2 px-4 rounded-full hover:bg-swamp-600" onclick="openPostModal()">
                        <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" color="none">
                            <g id="SVGRepo_iconCarrier">
                                <path d="M19 14V22H2.99997V4H13"></path>
                                <path d="M17.4608 4.03921C18.2418 3.25817 19.5082 3.25816 20.2892 4.03921L20.9608 4.71079C21.7418 5.49184 21.7418 6.75817 20.9608 7.53921L11.5858 16.9142C11.2107 17.2893 10.702 17.5 10.1716 17.5L7.5 17.5L7.5 14.8284C7.5 14.298 7.71071 13.7893 8.08579 13.4142L17.4608 4.03921Z"></path>
                                <path d="M16.25 5.25L19.75 8.75"></path>
                            </g>
                        </svg>
                        <span>New Ribbit</span>
                    </button>
                    <a href="@Url.Action("Index", "Feed")" class="p-1 text-swamp-900 flex items-center space-x-2 hover:bg-swamp-50 rounded-lg">
                        <svg class="w-8 h-8" fill="currentColor" stroke="currentColor" viewBox="-81.92 -81.92 675.84 675.84" stroke-width="0.0">
                        </svg>
                        <h3 class="text-lg font-semibold">Swamp</h3>
                    </a>
                    <a href="#" class="p-1 text-swamp-900 flex items-center space-x-2 hover:bg-swamp-50 rounded-lg">
                        <svg class="w-8 h-8" fill="currentColor" stroke="currentColor" viewBox="-43.32 -43.32 327.29 327.29">
                        </svg>
                        <h3 class="text-lg font-semibold">Events</h3>
                    </a>
                    <a href="#" class="p-1 text-swamp-900 flex items-center space-x-2 hover:bg-swamp-50 rounded-lg">
                        <svg class="w-8 h-8" fill="currentColor" viewBox="-122.88 -122.88 757.76 757.76" stroke-width="0.0">
                        </svg>
                        <h3 class="text-lg font-semibold">Ponds</h3>
                    </a>
                </div>
            </div>

            <!-- Main Feed -->
            <div class="lg:col-span-2 divide-y bg-white">
                <!-- Profile Header -->
                <div class="relative overflow-hidden">
                    <div class="h-48 bg-swamp-800 relative">
                        <div class="absolute inset-0 bg-gradient-to-b from-swamp-600 to-swamp-200"></div>
                        <div class="absolute -bottom-12 left-6 z-9">
                            <div class="w-32 h-32 rounded-full border-4 border-swamp-600 bg-swamp-800 overflow-hidden shadow-xl">
                                <img src="@Model.User.AvatarUrl" class="w-full h-full object-cover" alt="Profile avatar">
                            </div>
                        </div>
                    </div>
                    <div class="pt-20 pb-6 px-6">
                        <div class="flex justify-between items-start">
                            <div>
                                <h1 class="text-2xl font-bold text-swamp-900">@Model.User.DisplayName</h1>
                                <p class="text-swamp-500">@@@Model.User.Username</p>
                            </div>
                            <button class="px-4 p-2 flex items-center space-x-1 bg-swamp-500 text-white rounded-full hover:bg-swamp-600 transition-all">
                                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                </svg>
                                <span>Settings</span>
                            </button>
                        </div>
                        @* <div class="mt-4 flex gap-6 text-swamp-700">
                            <div><span class="text-swamp-400 font-medium">120</span> Following</div>
                            <div><span class="text-swamp-400 font-medium">58</span> Followers</div>
                        </div> *@
                        <p class="mt-4 text-swamp-700 leading-relaxed">
                            @Model.User.Bio
                        </p>
                    </div>
                    <div class="flex gap-4 items-center">
                        <button class="p-2 pl-4 pr-4 text-swamp-700 border-b-2 border-swamp-500">Ribbits</button>
                        <button class="p-2 pl-4 pr-4 text-swamp-500 hover:text-swamp-700">Ponds</button>
                        <button class="p-2 pl-4 pr-4 text-swamp-500 hover:text-swamp-700">Replies</button>
                        <button class="p-2 pl-4 pr-4 text-swamp-500 hover:text-swamp-700">Media</button>
                    </div>
                </div>

                <!-- Post Feed -->
                <div class="space-y-6" id="post-list">
                    @await Html.PartialAsync("_PostList", Model.Posts)
                    <div id="loading" class="text-center py-4 hidden">
                        <span>Loading more posts...</span>
                    </div>
                </div>
            </div>

            <!-- Right Sidebar -->
            <div class="lg:col-span-1 bg-white invisible lg:visible">
                <div class="p-6 pb-0">
                    <div class="relative">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg class="w-5 h-5 text-swamp-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                            </svg>
                        </div>
                        <input type="text" placeholder="Search" class="w-full pl-10 pr-4 py-2 bg-swamp-100 dark:bg-swamp-900 rounded-full border-none focus:ring-2 focus:ring-swamp-400 focus-visible:ring-swamp-400 placeholder:text-swamp-400">
                    </div>
                </div>
                @await Html.PartialAsync("_TrendingPonds", Model.TrendingPonds)
                @await Html.PartialAsync("_UpcomingEvents", Model.UpcomingEvents)
                <div class="p-6">
                    <div class="flex items-start space-x-2 text-swamp-600">
                        <a href="/contact" class="hover:text-swamp-800">Contact</a>
                        <span>•</span>
                        <a href="/privacy" class="hover:text-swamp-800">Privacy</a>
                        <span>•</span>
                        <a href="/tos" class="hover:text-swamp-800">Terms</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Post Modal (Hidden by default) -->
    <div id="postModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
        <div class="bg-white rounded-xl max-w-2xl w-full p-6">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-semibold">New Ribbit</h3>
                <button onclick="closePostModal()" class="text-swamp-500 hover:text-swamp-700">
                    ✕
                </button>
            </div>
            <textarea id="postContent" class="w-full p-4 border border-swamp-200 rounded-lg focus:ring-2 focus:ring-swamp-400 focus:border-transparent" 
                      rows="4" 
                      placeholder="What's hopping?"></textarea>
            <div class="mt-4 flex justify-between items-center">
                <div class="space-x-2">
                    <button class="p-2 hover:bg-swamp-100 rounded-lg">
                        🐸 Add Frogmoji
                    </button>
                </div>
                <button id="sendRibbitBtn" class="bg-swamp-500 text-white px-6 py-2 rounded-full hover:bg-swamp-600">
                    Send Ribbit
                </button>
            </div>
        </div>
    </div>

    <script>
        function openPostModal() {
            document.getElementById('postModal').classList.remove('hidden');
        }

        function closePostModal() {
            document.getElementById('postModal').classList.add('hidden');
            document.getElementById('postContent').value = '';
        }

        let page = 1;
        let isLoading = false;

        const onScroll = () => {
            if (isLoading) return;

            const postList = document.getElementById('post-list');
            const loading = document.getElementById('loading');
            const threshold = 100

            if (window.innerHeight + window.scrollY >= postList.offsetHeight + postList.offsetTop - threshold) {
                isLoading = true;
                loading.classList.remove('hidden');

                page++;
                fetch(`/Blog/Profile/LoadMorePosts?username=@Model.User.Username&page=${page}`)
                    .then(response => response.text())
                    .then(html => {
                        postList.insertAdjacentHTML('beforeend', html);
                        isLoading = false;
                        loading.classList.add('hidden');

                        if (html.trim() === '') {
                            window.removeEventListener('scroll', onScroll);
                        }
                    });
            }
        };

        window.addEventListener('scroll', onScroll);

        (function() {
            const btn = document.getElementById('settingsButton');
            const dropdown = document.getElementById('settingsDropdown');
            let isOpen = false;

            function toggleDropdown() {
                isOpen = !isOpen;
                dropdown.classList.toggle('hidden', !isOpen);
                btn.setAttribute('aria-expanded', isOpen);
            }

            function closeDropdown() {
                isOpen = false;
                dropdown.classList.add('hidden');
                btn.setAttribute('aria-expanded', 'false');
            }

            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                toggleDropdown();
            });

            document.addEventListener('click', (e) => {
                if (!dropdown.contains(e.target) && !btn.contains(e.target)) {
                    closeDropdown();
                }
            });

            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') closeDropdown();
            });
        })();
    </script>
</body>
</html>
